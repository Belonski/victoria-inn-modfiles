@include "base.fgd"
 
@PointClass base(Targetname) studio("models/Victoria_items/keycard.mdl")= vi_item_keycard :  "Keycard model entity."
[
	output OnPlayerTouch(void) : "Key found."

	EntityId(integer) : "Entity Id" : 0 :	"The Id of the element to be able to tell one entity from the other."
	skin(integer) : "Skin" : 0 : "0 = Rooms top floor, 1 = Elevator"
]

@PointClass base(Targetname) studio("models/Victoria_items/keys.mdl")= vi_item_key :  "Key model entity."
[
	output OnPlayerTouch(void) : "Key found."
	
	EntityId(integer) : "Entity Id" : 0 :	"The Id of the element to be able to tell one entity from the other."
]

@PointClass base(Targetname) = checkpoint_trigger : "Entity for the checkpoint trigger."
[
	input Tick(void) : "Fires when we reach a checkpoint"
]

@PointClass base(Targetname) studio("models/Victoria_items/tape/tape.mdl")= vi_item_tape : "Tape model entity."
[
	output OnPlayerTouch(void) : "Tape found."

	EntityId(integer) : "EntityId" : 0 : "The Id of the element to be able to tell one entity from the other."
]

@PointClass base(Targetname) studio("models/Victoria_items/camera/camera.mdl")= vi_item_camera :  "Camera model entity."
[
	output OnPlayerTouch(void) : "Camera found."
]

@PointClass base(Targetname) studio("models/Victoria_items/newspaper/newspaper.mdl")= vi_item_newspaper :  "Newspaper model entity."
[
	output OnPlayerTouch(void) : "Newspaper found."
	EntityId(integer) : "Entity Id" : 0 : "The Id of the element to be able to tell one entity from the other."
]

@PointClass base(Targetname) studio("models/Victoria_items/battery/battery.mdl")= vi_item_battery :  "Battery model entity."
[
	output OnPlayerTouch(void) : "Battery found."
]

@PointClass base(Targetname) studio("models/Victoria_items/time_door_lock/time_door_lock.mdl")= vi_item_door_time_lock :  "doorTimeLock model entity."
[
]

@PointClass base(Targetname) studio("models/items/boxsrounds.mdl")= vi_pistol_ammo : "Box of infinite Pistolammo" 
[
]


@PointClass size( -4 -4 -4, 4 4 4 ) base(Targetname, Parentname, Angles) = env_item_flare : "Flare"
[
	scale(float) : "Scale" : 1
	duration(float) : "Duration" : 70
	
	spawnflags(Flags) =
	[
		1 : "No DLight" : 0
		2 : "No Smoke" : 0
		4 : "Infinite" : 0
		8 : "Start off" : 0
	]

	input Start(float) : "Starts the flare burning. The flare will burn for the specified number of seconds (0 = infinite)."
	input Die(float) : "Causes the flare to fade out over the specified number of seconds, and then die (0 = die instantly)."
	input Launch(float) : "Launch the flare forward with the specified speed."
]

@NPCClass base(BaseNPC) studio("models/victoria_monster/boss1.mdl") = npc_firstBoss: "FirstBoss"
[
]
@NPCClass base(BaseNPC) studio("models/Zombie/Classic.mdl") = npc_secondmonster: "SecondMonster"
[
]
@NPCClass base(BaseNPC) studio("models/Victoria_monster/enemy_1.mdl") = npc_firstmonster: "FirstMonster"
[
]
@NPCClass base(BaseNPC) studio("models/vortigaunt.mdl") = npc_secondBoss: "SecondBoss"
[
]



//-------------------------------------------------------------------------
//
// Weapons
//
//-------------------------------------------------------------------------
@BaseClass color(0 0 200) base(Targetname, Angles) sphere(fademindist) sphere(fademaxdist) = Weapon
[
	spawnflags(Flags) =
	[
		1 : "Start constrained" : 0
		2 : "Deny player pickup (reserve for NPC)" : 0
		4 : "Not puntable by Gravity Gun" : 0
	]

	output OnPlayerUse(void) : "Fires when the player +uses this weapon"
	output OnPlayerPickup(void) : "Fires when the player picks up this weapon"
	output OnNPCPickup(void) : "Fires when an NPC picks up this weapon"
	output OnCacheInteraction(void) : "Fires when the player 'proves' they've found this weapon. Fires on: Player Touch, +USE pickup, Physcannon pickup, Physcannon punt."

	fademindist(float) : "Start Fade Dist/Pixels" : -1 : "Distance at which the prop starts to fade (<0 = use fademaxdist). If 'Screen Space Fade' is selected, this represents the number of pixels wide covered by the prop when it starts to fade."
	fademaxdist(float) : "End Fade Dist/Pixels" : 0 : "Maximum distance at which the prop is visible (0 = don't fade out). If 'Screen Space Fade' is selected, this represents the *minimum* number of pixels wide covered by the prop when it fades."
	fadescale(float) : "Fade Scale" : 1 : "If you specify a fade in the worldspawn, or if the engine is running under dx7, then the engine will forcibly fade out props even if fademindist/fademaxdist isn't specified." +
												 " This scale factor gives you some control over the fade. Using 0 here turns off the forcible fades." +
]

@PointClass base(Weapon) studio("models/Victoria_weapons/w_knife.mdl") = weapon_knife : "Knife" []

@PointClass base(Weapon) studio("models/weapons/w_physics.mdl") = weapon_recreateWeapon : "Recreate Weapon" []